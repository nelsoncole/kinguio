
A unir propriedades do programa

Removida propriedade 0xc0000002 para unir main.o (0x3) e stage2.o (não encontrado)
Removida propriedade 0xc0000002 para unir main.o (não encontrado) e data.o (0x3)
Removida propriedade 0xc0000002 para unir main.o (não encontrado) e stdlib.o (0x3)
Removida propriedade 0xc0000002 para unir main.o (não encontrado) e string.o (0x3)
Removida propriedade 0xc0000002 para unir main.o (não encontrado) e gui.o (0x3)
Removida propriedade 0xc0000002 para unir main.o (não encontrado) e font8x16.o (0x3)
Removida propriedade 0xc0000002 para unir main.o (não encontrado) e stdio.o (0x3)

Distribuindo símbolos comuns
Símbolos comuns do tamanho do ficheiro

r_printf_buf        0x800             stdio.o
gui                 0x4               gui.o

Descartar secções de entrada

 .group         0x0000000000000000        0x8 main.o
 .note.gnu.property
                0x0000000000000000       0x1c main.o
 .note.gnu.property
                0x0000000000000000       0x1c data.o
 .group         0x0000000000000000        0x8 stdlib.o
 .group         0x0000000000000000        0x8 stdlib.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 stdlib.o
 .note.gnu.property
                0x0000000000000000       0x1c stdlib.o
 .group         0x0000000000000000        0x8 string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 string.o
 .note.gnu.property
                0x0000000000000000       0x1c string.o
 .group         0x0000000000000000        0x8 gui.o
 .group         0x0000000000000000        0x8 gui.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 gui.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 gui.o
 .note.gnu.property
                0x0000000000000000       0x1c gui.o
 .note.gnu.property
                0x0000000000000000       0x1c font8x16.o
 .group         0x0000000000000000        0x8 stdio.o
 .group         0x0000000000000000        0x8 stdio.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 stdio.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 stdio.o
 .note.gnu.property
                0x0000000000000000       0x1c stdio.o

Configuração de Memória

Nome :           Origem             Comprimento        Atributos
*default*        0x0000000000000000 0xffffffffffffffff

Script de ligação e mapa de memória

                0x0000000000011000                . = 0x11000
                0x0000000000011000                _start = .

.text           0x0000000000011000     0x1000 carregar endereço 0x0000000000001000
                0x0000000000011000                code = .
 *(.text)
 .text          0x0000000000011000       0x15 stage2.o
 .text          0x0000000000011015       0x52 main.o
                0x0000000000011015                main
 .text          0x0000000000011067        0x0 data.o
 .text          0x0000000000011067      0x289 stdlib.o
                0x0000000000011067                initialize_heap
                0x00000000000110aa                malloc
                0x00000000000110dd                i2hex
                0x00000000000111e4                itoa
 .text          0x00000000000112f0      0x10a string.o
                0x00000000000112f0                memset
                0x0000000000011323                memcpy
                0x0000000000011374                strcpy
                0x00000000000113c8                strlen
 .text          0x00000000000113fa      0x471 gui.o
                0x00000000000113fa                initialize_gui
                0x00000000000115a7                put_pixel
                0x00000000000115e6                put_pixel_buff
                0x000000000001164d                refresh_rate
                0x0000000000011661                clears_creen
                0x00000000000116c2                draw_char_transparent
                0x000000000001175c                glyph
 .text          0x000000000001186b        0x0 font8x16.o
 .text          0x000000000001186b      0x329 stdio.o
                0x000000000001186b                putchar
                0x0000000000011897                puts
                0x00000000000118f7                printf
                0x00000000000119a8                vsprintf
 *(.rodata)
 .rodata        0x0000000000011b94       0x18 main.o
 .rodata        0x0000000000011bac       0x88 stdio.o
                0x0000000000012000                . = ALIGN (0x1000)
 *fill*         0x0000000000011c34      0x3cc 

.iplt           0x0000000000012000        0x0 carregar endereço 0x0000000000002000
 .iplt          0x0000000000012000        0x0 stage2.o

.text.__x86.get_pc_thunk.bx
                0x0000000000012000        0x4 carregar endereço 0x0000000000002000
 .text.__x86.get_pc_thunk.bx
                0x0000000000012000        0x4 main.o
                0x0000000000012000                __x86.get_pc_thunk.bx

.text.__x86.get_pc_thunk.ax
                0x0000000000012004        0x4 carregar endereço 0x0000000000002004
 .text.__x86.get_pc_thunk.ax
                0x0000000000012004        0x4 stdlib.o
                0x0000000000012004                __x86.get_pc_thunk.ax

.eh_frame       0x0000000000012008      0x32c carregar endereço 0x0000000000002008
 .eh_frame      0x0000000000012008       0x60 main.o
 .eh_frame      0x0000000000012068       0x9c stdlib.o
                                         0xc8 (tamanho antes do relaxamento)
 .eh_frame      0x0000000000012104       0x84 string.o
                                         0xb0 (tamanho antes do relaxamento)
 .eh_frame      0x0000000000012188       0xfc gui.o
                                        0x13c (tamanho antes do relaxamento)
 .eh_frame      0x0000000000012284       0xb0 stdio.o
                                         0xf0 (tamanho antes do relaxamento)

.rel.dyn        0x0000000000012334        0x0 carregar endereço 0x0000000000002334
 .rel.got       0x0000000000012334        0x0 stage2.o
 .rel.iplt      0x0000000000012334        0x0 stage2.o
 .rel.text      0x0000000000012334        0x0 stage2.o

.data           0x0000000000012340     0x1cc0 carregar endereço 0x0000000000002340
                0x0000000000012340                data = .
 *(.data)
 .data          0x0000000000012340        0x0 main.o
 .data          0x0000000000012340        0x1 data.o
                0x0000000000012340                dv_num
 .data          0x0000000000012341        0x0 stdlib.o
 .data          0x0000000000012341        0x0 string.o
 .data          0x0000000000012341        0x0 gui.o
 *fill*         0x0000000000012341       0x1f 
 .data          0x0000000000012360     0x1000 font8x16.o
                0x0000000000012360                font8x16
 .data          0x0000000000013360        0x0 stdio.o
                0x0000000000014000                . = ALIGN (0x1000)
 *fill*         0x0000000000013360      0xca0 

.got            0x0000000000014000        0x0 carregar endereço 0x0000000000004000
 .got           0x0000000000014000        0x0 stage2.o

.got.plt        0x0000000000014000        0xc carregar endereço 0x0000000000004000
 .got.plt       0x0000000000014000        0xc stage2.o
                0x0000000000014000                _GLOBAL_OFFSET_TABLE_

.igot.plt       0x000000000001400c        0x0 carregar endereço 0x000000000000400c
 .igot.plt      0x000000000001400c        0x0 stage2.o

.bss            0x0000000000014020     0x2fe0 carregar endereço 0x0000000000004020
                0x0000000000014020                bss = .
 *(.bss)
 .bss           0x0000000000014020     0x2000 stage2.o
 .bss           0x0000000000016020        0x0 main.o
 .bss           0x0000000000016020        0x4 data.o
                0x0000000000016020                heap
 .bss           0x0000000000016024        0x0 stdlib.o
 .bss           0x0000000000016024        0x0 string.o
 .bss           0x0000000000016024        0x0 gui.o
 .bss           0x0000000000016024        0x0 font8x16.o
 .bss           0x0000000000016024        0x0 stdio.o
 *(COMMON)
 COMMON         0x0000000000016024        0x4 gui.o
                0x0000000000016024                gui
 *fill*         0x0000000000016028       0x18 
 COMMON         0x0000000000016040      0x800 stdio.o
                0x0000000000016040                r_printf_buf
                0x0000000000017000                . = ALIGN (0x1000)
 *fill*         0x0000000000016840      0x7c0 
                0x0000000000017000                _end = .
LOAD stage2.o
LOAD main.o
LOAD data.o
LOAD stdlib.o
LOAD string.o
LOAD gui.o
LOAD font8x16.o
LOAD stdio.o
OUTPUT(stage2.bin elf32-i386)

.comment        0x0000000000000000       0x2a
 .comment       0x0000000000000000       0x2a main.o
                                         0x2b (tamanho antes do relaxamento)
 .comment       0x000000000000002a       0x2b data.o
 .comment       0x000000000000002a       0x2b stdlib.o
 .comment       0x000000000000002a       0x2b string.o
 .comment       0x000000000000002a       0x2b gui.o
 .comment       0x000000000000002a       0x2b font8x16.o
 .comment       0x000000000000002a       0x2b stdio.o

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 main.o
 .note.GNU-stack
                0x0000000000000000        0x0 data.o
 .note.GNU-stack
                0x0000000000000000        0x0 stdlib.o
 .note.GNU-stack
                0x0000000000000000        0x0 string.o
 .note.GNU-stack
                0x0000000000000000        0x0 gui.o
 .note.GNU-stack
                0x0000000000000000        0x0 font8x16.o
 .note.GNU-stack
                0x0000000000000000        0x0 stdio.o
